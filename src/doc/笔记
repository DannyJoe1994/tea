
一.@ServletComponentScan
当使用Spring-Boot时,嵌入式Servlet容器通过扫描注解的方式注册Servlet、Filter和Servlet规范的所有监听器（如HttpSessionListener监听器）。
SpringBoot的主Servlet为DispatcherServlet,其默认的url-pattern为"/".
也许我们在应用中还需要定义更多的Servlet，该如何使用SpringBoot来完成呢？
在spring boot中添加自己的Servlet有两种方法,代码注册Servlet和注解自动注册（Filter和Listener也是如此）。

1).代码注册通过ServletRegistrationBean、 FilterRegistrationBean 和 ServletListenerRegistrationBean 获得控制。
也可以通过实现 ServletContextInitializer 接口直接注册。

2).在 SpringBootApplication 上使用@ServletComponentScan 注解后，Servlet、Filter、Listener 可以直接通过 @WebServlet、@WebFilter、@WebListener 注解自动注册，无需其他代码。

二. 全局异常配置
    1.步骤
        1).自定义全局异常处理器,添加类注解@ControllerAdvice或者@RestControllerAdvice.
        2).自定义异常方法,添加方法注解@ExceptionHandler,参数为该方法要处理的异常类型.
        3).如果想返回http状态码,还需要添加方法注解@ResponseStatus.
    2.示例
        参见:GlobalExceptionHandler

三.多数据源配置
    1.步骤
        1)新建application-xxx.yml 或者.properties 配置文件,必须 'application-'开头,例如application-dev.yml
        2)系统默认配置文件application.yml 里添加属性 profiles: active: dev,表示默认打包application-dev.yml 配置。
        3)打包运行时候可以通过--来修改配置文件参数,例如 java -jar tea.jar --profiles.active=test。

四.事务管理
     1.步骤
        使用 jdbc 或者 druid数据源等数据路连接，添加依赖后，他都会自动默认分别注入DataSourceTransactionManager或JpaTransactionManager
        不需要其他的配置，只需要在特定方法上加 @Transcation 注解就可以实现事务管理。
      2.注意
          Mysql表示有事务安全(比如 InnoDB)和非事务安全(比如 ISAM 和MyISAM)之分的，如果数据库表是非事务安全的，程序是没法实现异常回滚的。
五.spring EhCache缓存
      1.步骤
            1).添加缓存依赖 spring-boot-starter-cache
            2).主类Application 添加注解 @EnableCaching
            3).添加EhCache配置文件,并加载到application.yml
            4).在需要缓存的接口上添加 @Cacheable
       2.缓存用的几个注解的作用
            1).@CacheConfig(cacheNames = "XXX")  用在类上，统一定义缓存的名字，表示该类的方法都是支持缓存的，
            2).@CachePut  用在方法上，根据请求参数添加到缓存，但是每次都会触发真实的方法调用，一般用在save方法上
            3).@CacheEvict 用在方法上，会根据条件对缓存进行清空。一般用在delete update 方法上
            4).@Cacheable 用在方法上，可以根据请求参数加到缓存，每次调用会取缓存数据，缓存中不存在，才去调用真实方法，一般用在 query方法上。

      3.注意
            1). @CacheEvict清除命名空间下所有缓存的用法是@CacheEvict(allEntries = true)
                                        清除特定缓存的写法是@CacheEvict(key = "#userManager.managerId") 这里是只有#没有{}的
            2).被缓存的实体必须序列化，另外 EhCache是进程内缓存框架，各服务器之间的缓存都是独立的。
六. Ehcache集成Redis 缓存
      1.步骤
            1).添加Redis依赖 spring-boot-starter-data-redis
            2).配置文件添加redis配置
            3).
            4).
七. 定时任务
      1.步骤
            1).主类Application 添加@EnableScheduling 支持定时任务
            2).新加定时任务类，添加@Component类注解
            3).新加定时方法，添加注解@Scheduled(cron = "XXX")
八. 异步任务
      1.步骤
            1).主类Application 添加@EnableAsync 支持异步任务
            2).新加异步任务类，添加@Component类注解
            3).新加异步方法，添加@Async 注解
      2.注意
            1). 异步方法不要写成static，注解会不生效
            2). 异步执行结果可以返回AsyncResult<>()对象来通知调用方。
九. 拦截器
      1.步骤
            1). 新建自定义拦截器类实现HandlerInterceptor接口，参见ControllerInterceptor类
            2). 重写preHandle()、postHandle()、afterCompletion()方法分别表示请求前处理，返回前处理，请求结束处理。
            3). 新建拦截器注册类，注册拦截器，配置拦截规则，参见AuthConfigurerAdapter类
十. 过滤器
      1.步骤 https://www.cnblogs.com/begin2016/p/8947887.html
            1).
            2).
            3).
      2.注意
            过滤器在拦截器之前执行，过滤器能做的拦截器都能做

            测试git
